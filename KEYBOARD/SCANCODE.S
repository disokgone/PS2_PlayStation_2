	SECTION .TEXT
	PUBLIC	ON
;KeyCodeTable 由 MkScan.S 讀取 SIO 傳來的按鍵硬體值, 借此表格轉成第一階段掃瞄碼
KeyCodeTable:
	db	0	;$00 = no key
	db	0x43	;$01 = F9
	db	0	;$02
	db	0x3F	;$03 = F5
	db	0x3D	;$04 = F3
	db	0x3B	;$05 = F1
	db	0x3C	;$06 = F2
	db	0x58	;$07 = F12
	db	0	;$08
	db	0x44	;$09 = F10
	db	0x42	;$0A = F8
	db	0x40	;$0B = F6
	db	0x3E	;$0C = F4
	db	0x0F	;$0D = TAB
	db	0x29	;$0E = `~
	db	0	;$0F
	db	0	;$10
	db	0x38	;$11 = ALT (left)
	db	0x2A	;$12 = SHIFT (left)
	db	0	;$13
	db	0x1D	;$14 = CTRL (left)
	db	0x10	;$15 = Q
	db	0x02	;$16 = 1!
	db	0	;$17
	db	0	;$18
	db	0	;$19
	db	0x2C	;$1A = Z
	db	0x1F	;$1B = S
	db	0x1E	;$1C = A
	db	0x11	;$1D = W
	db	0x03	;$1E = 2@
	db	0	;$1F
	db	0	;$20
	db	0x2E	;$21 = C
	db	0x2D	;$22 = X
	db	0x20	;$23 = D
	db	0x12	;$24 = E
	db	0x05	;$25 = 4$
	db	0x04	;$26 = 3#
	db	0	;$27
	db	0	;$28
	db	0x39	;$29 = SPACE
	db	0x2F	;$2A = V
	db	0x21	;$2B = F
	db	0x14	;$2C = T
	db	0x13	;$2D = R
	db	0x06	;$2E = 5%
	db	0	;$2F
	db	0	;$30
	db	0x31	;$31 = N
	db	0x30	;$32 = B
	db	0x23	;$33 = H
	db	0x22	;$34 = G
	db	0x15	;$35 = Y
	db	0x07	;$36 = 6^
	db	0	;$37
	db	0	;$38
	db	0	;$39
	db	0x32	;$3A = M
	db	0x24	;$3B = J
	db	0x16	;$3C = U
	db	0x08	;$3D = 7&
	db	0x09	;$3E = 8*
	db	0	;$3F
	db	0	;$40
	db	0x33	;$41 = ,<
	db	0x25	;$42 = K
	db	0x17	;$43 = I
	db	0x18	;$44 = O
	db	0x0B	;$45 = 0)
	db	0x0A	;$46 = 9(
	db	0	;$47
	db	0	;$48
	db	0x34	;$49 = .>
	db	0x35	;$4A = /?
	db	0x26	;$4B = L
	db	0x27	;$4C = ;:
	db	0x19	;$4D = P
	db	0x0C	;$4E = -_
	db	0	;$4F
	db	0	;$50
	db	0	;$51
	db	0x28	;$52 = '"
	db	0	;$53
	db	0x1A	;$54 = [{
	db	0x0D	;$55 = =+
	db	0	;$56
	db	0	;$57
	db	0x3A	;$58 = Caps lock
	db	0x36	;$59 = SHIFT (right)
	db	0x1C	;$5A = Enter
	db	0x1B	;$5B = ]}
	db	0	;$5C
	db	0x2B	;$5D = \|
	db	0	;$5E
	db	0	;$5F
	db	0	;$60
	db	0	;$61
	db	0	;$62
	db	0	;$63
	db	0	;$64
	db	0	;$65
	db	0x0E	;$66 = BackSpace
	db	0	;$67
	db	0	;$68
	db	0x4F	;$69 = 1 (pad)
	db	0	;$6A
	db	0x4B	;$6B = 4 (pad)
	db	0x47	;$6C = 7 (pad)
	db	0	;$6D
	db	0	;$6E
	db	0	;$6F
	db	0x52	;$70 = 0 (pad)
	db	0x53	;$71 = . (pad)
	db	0x50	;$72 = 2 (pad)
	db	0x4C	;$73 = 5 (pad)
	db	0x4D	;$74 = 6 (pad)
	db	0x48	;$75 = 8 (pad)
	db	0x01	;$76 = ESC
	db	0x45	;$77 = NUM lock
	db	0x57	;$78 = F11
	db	0x4E	;$79 = + (pad)
	db	0x51	;$7A = 3 (pad)
	db	0x4A	;$7B = - (pad)
	db	0x37	;$7C = * (pad)
	db	0x49	;$7D = 9 (pad)
	db	0x46	;$7E = SCROLL lock
	db	0	;$7F
	db	0	;$80
	db	0	;$81
	db	0	;$82
	db	0x41	;$83 = F7
;E0code 由 MkScan.S 讀取 SIO 傳來的按鍵硬體值, 借此表格轉成第一階段掃瞄碼
E0code:
	db	0x11, 0x38	;E0 11 = ALT (right)
	db	0x12, 0x2A	;E0 12 = Shift (left) -- for PrtScr
	db	0x14, 0x1D	;E0 14 = CTRL (right)
	db	0x1F, 0x00	;E0 1F = Win98Mark (left)
	db	0x27, 0x00	;E0 27 = Win98Mark (right)
	db	0x2F, 0x00	;E0 2F = MenuCall (Win98)
	db	0x4A, 0x35	;E0 4A = / (pad)
	db	0x5A, 0x1C	;E0 5A = Enter (pad)
	db	0x69, 0x4F	;E0 69 = End
	db	0x6B, 0x4B	;E0 6B = Left Arrow
	db	0x6C, 0x47	;E0 6C = Home
	db	0x70, 0x52	;E0 70 = Ins
	db	0x71, 0x53	;E0 71 = Del
	db	0x72, 0x50	;E0 72 = Down Arrow
	db	0x74, 0x4D	;E0 74 = Right Arrow
	db	0x75, 0x48	;E0 75 = Up Arrow
	db	0x7A, 0x51	;E0 7A = PgDn
	db	0x7C, 0x37	;E0 7C = * (pad) -- for PrtScr
	db	0x7D, 0x49	;E0 7D = PgUp
;PrtScr on	0xE0, 0x12, 0xE0, 0x7C (== 0xE0, Left-Shift, 0xE0, pad-*)
;PrtScr release 0xE0, 0xF0, 0x7C, 0xE0, 0xF0, 0x12
;Pause		0xE1, 0x14, 0x77, 0xE1, 0xF0, 0x14, 0xF0, 0x77
;Pause also ==	0xE1, CTRL, NumL, 0xE1, 0xF0, CTRL, 0xF0, NumL
;-----------------------------------------------------------------------
;scan2ASCII 供 EMUINT16.s 讀取 scan code 並轉成 ASCII 碼用 !
scan2ASCII:
	db	0	;$00 = no key
	db	0x1B	;$01 = ESC
	db	0x31	;$02 = 1
	db	0x32	;$03 = 2
	db	0x33	;$04 = 3
	db	0x34	;$05 = 4
	db	0x35	;$06 = 5
	db	0x36	;$07 = 6
	db	0x37	;$08 = 7
	db	0x38	;$09 = 8
	db	0x39	;$0A = 9
	db	0x30	;$0B = 0
	db	0x2D	;$0C = -
	db	0x3D	;$0D = =
	db	0x08	;$0E = BackSpace
	db	0x09	;$0F = Tab
	db	0x71	;$10 = Q
	db	0x77	;$11 = W
	db	0x65	;$12 = E
	db	0x72	;$13 = R
	db	0x74	;$14 = T
	db	0x79	;$15 = Y
	db	0x75	;$16 = U
	db	0x69	;$17 = I
	db	0x6F	;$18 = O
	db	0x70	;$19 = P
	db	0x5B	;$1A = [
	db	0x5D	;$1B = ]
	db	0x0D	;$1C = Enter
	db	0	;$1D = (left CTRL)
	db	0x61	;$1E = A
	db	0x73	;$1F = S
	db	0x64	;$20 = D
	db	0x66	;$21 = F
	db	0x67	;$22 = G
	db	0x68	;$23 = H
	db	0x6A	;$24 = J
	db	0x6B	;$25 = K
	db	0x6C	;$26 = L
	db	0x3B	;$27 = ;
	db	0x27	;$28 = '
	db	0x60	;$29 = `
	db	0	;$2A =
	db	0x5C	;$2B = \
	db	0x7A	;$2C = Z
	db	0x78	;$2D = X
	db	0x63	;$2E = C
	db	0x76	;$2F = V
	db	0x62	;$30 = B
	db	0x6E	;$31 = N
	db	0x6D	;$32 = M
	db	0x2C	;$33 = ,
	db	0x2E	;$34 = .
	db	0x2F	;$35 = /
	db	0	;$36 =
	db	0x2A	;$37 = * (pad)
	db	0	;$38 =
	db	0x20	;$39 = space
	db	0	;$3A =
	db	0	;$3B =
	db	0	;$3C =
	db	0	;$3D =
	db	0	;$3E =
	db	0	;$3F =
	db	0	;$40 =
	db	0	;$41 =
	db	0	;$42 =
	db	0	;$43 =
	db	0	;$44 =
	db	0	;$45 =
	db	0	;$46 =
	db	0	;$47 =
	db	0	;$48 =
	db	0	;$49 =
	db	0x2D	;$4A = - (pad)
	db	0	;$4B =
	db	0	;$4C =
	db	0	;$4D =
	db	0x2B	;$4E = + (pad)
;alt_table 供 EMUINT16.s 讀取 Alt 鍵按下時的 scan code 用 !
alt_table:
	db	0x28, 0, 0x29, 0	;' `
	db	0x33, 0, 0x34, 0	;, .
	db	0x35, 0, 0x4C, 0	;/ 5 (pad)
	db	0x57, 0x8B, 0x58, 0x8C	;F11, F12
	db	0x53, 0xA3, 0x50, 0xA0	;Del, Down arrow
	db	0x4F, 0x9F, 0x1C, 0xA6	;End, Enter
	db	0x47, 0x97, 0x52, 0xA2	;Home, Ins
	db	0x35, 0xA4, 0x4B, 0x9B	;/ (pad), Left arrow
	db	0x4D, 0x9D, 0x0F, 0xA5	;Right arrow, Tab
	db	0x48, 0x98, 0, 0	;Up arrow, (End of alt_table)
;shi_table0 供 EMUINT16.s 讀取 Shift 鍵按下時的 ASCII 用 !
shi_table0:
	db	2, 0x21, 3, 0x40, 4, 0x23, 5, 0x24, 6, 0x25, 7, 0x5E
	db	8, 0x26, 9, 0x2A, 0x0A, 0x28, 0x0B, 0x29, 0x0C, 0x5F, 0x0D, 0x2B
	db	0x1A, 0x7B, 0x1B, 0x7D, 0x27, 0x3A, 0x28, 0x22, 0x29, 0x7E
	db	0x2B, 0x7C, 0x33, 0x3C, 0x34, 0x3E, 0x35, 0x3F, 0x0F, 0x00, 0, 0
;shi_table1 供 EMUINT16.s 讀取 Shift 鍵按下時的 scan-code 用 !
shi_table1:
	db	0x57, 0x87, 0x58, 0x88, 0, 0	;F11, F12
;ctr_table0 供 EMUINT16.s 讀取 CTRL 鍵按下時的 ASCII 用 !
ctr_table0:
	db	3, 0, 7, 0x1E, 0x0C, 0x1F, 0x1A, 0x1B, 0x1B, 0x1D
	db	0x27, 0, 0x28, 0, 0x29, 0, 0x2B, 0x1C, 0x33, 0, 0x34, 0
	db	0x35, 0, 0x0E, 0x7F, 0x1C, 0x0A, 0x4E, 0, 0, 0
;ctr_table1 供 EMUINT16.s 讀取 CTRL 鍵按下時的 scan-code 用 !
ctr_table1:	;PrtScr 0x7200 未處理
	db	2, 0, 4, 0, 5, 0, 6, 0, 8, 0, 9, 0, 0x0A, 0, 0x0B, 0
	db	0x0D, 0, 0x27, 0, 0x28, 0, 0x29 ,0, 0x33, 0, 0x34, 0
	db	0x35, 0, 0x57, 0x89, 0x58, 0x8A ;/ F11, F12
	db	0x53, 0x93, 0x50, 0x91, 0x4F, 0x75, 0x47, 0x77, 0x52, 0x92
	db	0x4C, 0x8F, 0x37, 0x96, 0x4E, 0, 0x35, 0x95, 0x4B, 0x73
	db	0x51, 0x76, 0x49, 0x84, 0x4D, 0x74, 0x0F, 0x94, 0x48, 0x8D, 0, 0
;num_table 供 EMUINT16.s 讀取 NUM Lock 鍵按下時的 ASCII 用 !
num_table:	;只影響右方 0 - 9
	db	0x52, 0x30, 0x4F, 0x31, 0x50, 0x32, 0x51, 0x33
	db	0x4B, 0x34, 0x4C, 0x35, 0x4D, 0x36, 0x47, 0x37
	db	0x48, 0x38, 0x49, 0x39, 0x53, 0x2E, 0, 0
	END
